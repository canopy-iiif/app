// src/vault/utility/typesafe-actions-runtime.ts
var createAction = function createAction2(type) {
  return function() {
    const base = { type, getType: () => type, toString: () => type };
    return (payload, meta) => ({
      ...base,
      ...payload !== void 0 && { payload },
      ...meta !== void 0 && { meta }
    });
  };
};

// src/vault/actions/entity-actions.ts
var IMPORT_ENTITIES = "@iiif/IMPORT_ENTITIES";
var MODIFY_ENTITY_FIELD = "@iiif/MODIFY_ENTITY_FIELD";
var REORDER_ENTITY_FIELD = "@iiif/REORDER_ENTITY_FIELD";
var ADD_REFERENCE = "@iiif/ADD_REFERENCE";
var UPDATE_REFERENCE = "@iiif/UPDATE_REFERENCE";
var REMOVE_REFERENCE = "@iiif/REMOVE_REFERENCE";
var ADD_METADATA = "@iiif/ADD_METADATA";
var REMOVE_METADATA = "@iiif/REMOVE_METADATA";
var UPDATE_METADATA = "@iiif/UPDATE_METADATA";
var REORDER_METADATA = "@iiif/REORDER_METADATA";
var importEntities = createAction(IMPORT_ENTITIES)();
var modifyEntityField = createAction(MODIFY_ENTITY_FIELD)();
var reorderEntityField = createAction(REORDER_ENTITY_FIELD)();
var addReference = createAction(ADD_REFERENCE)();
var removeReference = createAction(REMOVE_REFERENCE)();
var updateReference = createAction(UPDATE_REFERENCE)();
var addMetadata = createAction(ADD_METADATA)();
var updateMetadata = createAction(UPDATE_METADATA)();
var removeMetadata = createAction(REMOVE_METADATA)();
var reorderMetadata = createAction(REORDER_METADATA)();
var entityActions = {
  importEntities,
  modifyEntityField,
  reorderEntityField,
  addReference,
  removeReference,
  updateReference,
  addMetadata,
  removeMetadata,
  updateMetadata,
  reorderMetadata
};

// src/vault/actions/mapping-actions.ts
var ADD_MAPPING = "@iiif/ADD_MAPPING";
var ADD_MAPPINGS = "@iiif/ADD_MAPPINGS";
var addMapping = createAction(ADD_MAPPING)();
var addMappings = createAction(ADD_MAPPINGS)();
var mappingActions = { addMapping, addMappings };

// src/vault/actions/request-actions.ts
var RESOURCE_ERROR = "RESOURCE_ERROR";
var RESOURCE_LOADING = "RESOURCE_LOADING";
var RESOURCE_READY = "RESOURCE_READY";
var REQUEST_RESOURCE = "@iiif/REQUEST_RESOURCE";
var REQUEST_ERROR = "@iiif/REQUEST_ERROR";
var REQUEST_MISMATCH = "@iiif/REQUEST_MISMATCH";
var REQUEST_COMPLETE = "@iiif/REQUEST_COMPLETE";
var REQUEST_OFFLINE_RESOURCE = "@iiif/REQUEST_OFFLINE_RESOURCE";
var requestResource = createAction(REQUEST_RESOURCE)();
var requestError = createAction(REQUEST_ERROR)();
var requestMismatch = createAction(REQUEST_MISMATCH)();
var requestComplete = createAction(REQUEST_COMPLETE)();
var requestOfflineResource = createAction(REQUEST_OFFLINE_RESOURCE)();
var requestActions = {
  requestResource,
  requestError,
  requestMismatch,
  requestComplete,
  requestOfflineResource
};

// src/vault/actions/batch-actions.ts
var BATCH_ACTIONS = "@iiif/BATCH";
var BATCH_IMPORT = "@iiif/BATCH_IMPORT";
var batchActions = createAction(BATCH_ACTIONS)();
var batchImport = createAction(BATCH_IMPORT)();

export {
  createAction,
  IMPORT_ENTITIES,
  MODIFY_ENTITY_FIELD,
  REORDER_ENTITY_FIELD,
  ADD_REFERENCE,
  UPDATE_REFERENCE,
  REMOVE_REFERENCE,
  ADD_METADATA,
  REMOVE_METADATA,
  UPDATE_METADATA,
  REORDER_METADATA,
  importEntities,
  modifyEntityField,
  reorderEntityField,
  addReference,
  removeReference,
  updateReference,
  addMetadata,
  updateMetadata,
  removeMetadata,
  reorderMetadata,
  entityActions,
  ADD_MAPPING,
  ADD_MAPPINGS,
  addMapping,
  addMappings,
  mappingActions,
  RESOURCE_ERROR,
  RESOURCE_LOADING,
  RESOURCE_READY,
  REQUEST_RESOURCE,
  REQUEST_ERROR,
  REQUEST_MISMATCH,
  REQUEST_COMPLETE,
  REQUEST_OFFLINE_RESOURCE,
  requestResource,
  requestError,
  requestMismatch,
  requestComplete,
  requestOfflineResource,
  requestActions,
  BATCH_ACTIONS,
  BATCH_IMPORT,
  batchActions,
  batchImport
};
