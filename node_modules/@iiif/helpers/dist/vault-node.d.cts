import { V as VaultOptions$1, E as EntityRef$1, b as Vault$1 } from './vault-CMO9TMRk.cjs';
import { E as Entities } from './vault-actions-DIpISlMs.cjs';
export { e as ActionFromType, A as AllActions, c as EntityStore, I as IIIFStore, M as MetaState, N as NormalizedEntity, P as PaginationState, d as Reducer, b as RefToFull, a as RefToNormalized, R as RequestState } from './vault-actions-DIpISlMs.cjs';
import { VaultZustandStore } from './vault-store.cjs';
import '@iiif/presentation-3';
import '@iiif/parser';
import '@iiif/presentation-3-normalized';
import 'typesafe-actions';
import 'zustand/vanilla';

type VaultOptions = VaultOptions$1;
type EntityRef<Ref extends keyof Entities> = EntityRef$1<Ref>;
declare class Vault extends Vault$1 {
    constructor(options?: Partial<VaultOptions>, store?: VaultZustandStore);
}
declare function globalVault(options?: VaultOptions): any;

export { Entities, type EntityRef, Vault, type VaultOptions, globalVault };
