import {
  Vault,
  getGlobal
} from "./chunk-MKHXVBKE.js";
import "./chunk-NPLDMOQC.js";
import "./chunk-OFD6EF4T.js";
import "./chunk-YAISZCRN.js";
import "./chunk-DU2KF6VF.js";
import "./chunk-F2Q2OM3J.js";
import "./chunk-6NZ5BWVI.js";
import "./chunk-2I7FN7JX.js";
import "./chunk-G7A32JAG.js";

// src/vault-node.ts
var _importDynamic = new Function("modulePath", "return import(modulePath)");
async function fetchInternal(...args) {
  if (typeof fetch !== "undefined") {
    return fetch(...args);
  }
  const { default: fetch_ } = await _importDynamic("node-fetch");
  return fetch_(...args);
}
var Vault2 = class extends Vault {
  constructor(options, store) {
    const _options = options || {};
    _options.customFetcher = async (url) => {
      return fetchInternal(url).then((r) => r.json());
    };
    super(_options, store);
  }
};
function globalVault(options) {
  const g = getGlobal();
  try {
    const gv = g["IIIF_VAULT"];
    if (gv) {
      return gv;
    }
  } catch (e) {
  }
  const newVault = new Vault2(options);
  try {
    g["IIIF_VAULT"] = newVault;
  } catch (e) {
  }
  return newVault;
}
export {
  Vault2 as Vault,
  globalVault
};
