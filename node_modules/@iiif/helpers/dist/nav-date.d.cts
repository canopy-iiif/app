import { InternationalString, Manifest, Collection } from '@iiif/presentation-3';
import { C as CompatVault } from './compat-CDGN4K25.cjs';
import { ManifestNormalized, CollectionNormalized } from '@iiif/presentation-3-normalized';
import './vault-CMO9TMRk.cjs';
import './vault-actions-DIpISlMs.cjs';
import 'typesafe-actions';
import '@iiif/parser';
import './vault-store.cjs';
import 'zustand/vanilla';
import './vault.cjs';

interface DateNavigationResource {
    id: string;
    type: 'Manifest' | 'Canvas';
    label: InternationalString;
    navDate: string;
}
interface DateNavigationDay {
    id: string;
    type: 'day';
    count: number;
    label: InternationalString;
    day: number;
    items: Array<DateNavigationResource>;
}
interface DateNavigationMonth {
    id: string;
    type: 'month';
    month: number;
    count: number;
    label: InternationalString;
    items: Array<DateNavigationDay>;
}
interface DateNavigationYear {
    id: string;
    type: 'year';
    year: number;
    count: number;
    label: InternationalString;
    items: Array<DateNavigationMonth>;
}
interface DateNavigationDecade {
    id: string;
    type: 'decade';
    yearStart: number;
    yearEnd: number;
    label: InternationalString;
    count: number;
    items: Array<DateNavigationYear>;
}
interface DateNavigationCentury {
    id: string;
    type: 'century';
    yearStart: number;
    yearEnd: number;
    label: InternationalString;
    count: number;
    items: Array<DateNavigationDecade>;
}
type DateNavigationTypes = DateNavigationCentury | DateNavigationDecade | DateNavigationYear | DateNavigationMonth | DateNavigationDay;
declare function createDateNavigation<T extends DateNavigationTypes, Type = T['type']>(vault: CompatVault, manifestOrCollection: Manifest | Collection | ManifestNormalized | CollectionNormalized | string, inputType?: Type): T[];

export { type DateNavigationCentury, type DateNavigationDay, type DateNavigationDecade, type DateNavigationMonth, type DateNavigationResource, type DateNavigationTypes, type DateNavigationYear, createDateNavigation };
