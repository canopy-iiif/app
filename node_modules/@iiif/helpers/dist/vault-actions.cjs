"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/vault-actions.ts
var vault_actions_exports = {};
__export(vault_actions_exports, {
  ADD_MAPPING: () => ADD_MAPPING,
  ADD_MAPPINGS: () => ADD_MAPPINGS,
  ADD_METADATA: () => ADD_METADATA,
  ADD_REFERENCE: () => ADD_REFERENCE,
  BATCH_ACTIONS: () => BATCH_ACTIONS,
  BATCH_IMPORT: () => BATCH_IMPORT,
  IMPORT_ENTITIES: () => IMPORT_ENTITIES,
  MODIFY_ENTITY_FIELD: () => MODIFY_ENTITY_FIELD,
  REMOVE_METADATA: () => REMOVE_METADATA,
  REMOVE_REFERENCE: () => REMOVE_REFERENCE,
  REORDER_ENTITY_FIELD: () => REORDER_ENTITY_FIELD,
  REORDER_METADATA: () => REORDER_METADATA,
  REQUEST_COMPLETE: () => REQUEST_COMPLETE,
  REQUEST_ERROR: () => REQUEST_ERROR,
  REQUEST_MISMATCH: () => REQUEST_MISMATCH,
  REQUEST_OFFLINE_RESOURCE: () => REQUEST_OFFLINE_RESOURCE,
  REQUEST_RESOURCE: () => REQUEST_RESOURCE,
  RESOURCE_ERROR: () => RESOURCE_ERROR,
  RESOURCE_LOADING: () => RESOURCE_LOADING,
  RESOURCE_READY: () => RESOURCE_READY,
  SET_META_VALUE: () => SET_META_VALUE,
  SET_META_VALUE_DYNAMIC: () => SET_META_VALUE_DYNAMIC,
  UNSET_META_VALUE: () => UNSET_META_VALUE,
  UPDATE_METADATA: () => UPDATE_METADATA,
  UPDATE_REFERENCE: () => UPDATE_REFERENCE,
  addMapping: () => addMapping,
  addMappings: () => addMappings,
  addMetadata: () => addMetadata,
  addReference: () => addReference,
  batchActions: () => batchActions,
  batchImport: () => batchImport,
  entityActions: () => entityActions,
  importEntities: () => importEntities,
  mappingActions: () => mappingActions,
  metaActions: () => metaActions,
  modifyEntityField: () => modifyEntityField,
  removeMetadata: () => removeMetadata,
  removeReference: () => removeReference,
  reorderEntityField: () => reorderEntityField,
  reorderMetadata: () => reorderMetadata,
  requestActions: () => requestActions,
  requestComplete: () => requestComplete,
  requestError: () => requestError,
  requestMismatch: () => requestMismatch,
  requestOfflineResource: () => requestOfflineResource,
  requestResource: () => requestResource,
  updateMetadata: () => updateMetadata,
  updateReference: () => updateReference
});
module.exports = __toCommonJS(vault_actions_exports);

// src/vault/utility/typesafe-actions-runtime.ts
var createAction = function createAction2(type) {
  return function() {
    const base = { type, getType: () => type, toString: () => type };
    return (payload, meta) => ({
      ...base,
      ...payload !== void 0 && { payload },
      ...meta !== void 0 && { meta }
    });
  };
};

// src/vault/actions/entity-actions.ts
var IMPORT_ENTITIES = "@iiif/IMPORT_ENTITIES";
var MODIFY_ENTITY_FIELD = "@iiif/MODIFY_ENTITY_FIELD";
var REORDER_ENTITY_FIELD = "@iiif/REORDER_ENTITY_FIELD";
var ADD_REFERENCE = "@iiif/ADD_REFERENCE";
var UPDATE_REFERENCE = "@iiif/UPDATE_REFERENCE";
var REMOVE_REFERENCE = "@iiif/REMOVE_REFERENCE";
var ADD_METADATA = "@iiif/ADD_METADATA";
var REMOVE_METADATA = "@iiif/REMOVE_METADATA";
var UPDATE_METADATA = "@iiif/UPDATE_METADATA";
var REORDER_METADATA = "@iiif/REORDER_METADATA";
var importEntities = createAction(IMPORT_ENTITIES)();
var modifyEntityField = createAction(MODIFY_ENTITY_FIELD)();
var reorderEntityField = createAction(REORDER_ENTITY_FIELD)();
var addReference = createAction(ADD_REFERENCE)();
var removeReference = createAction(REMOVE_REFERENCE)();
var updateReference = createAction(UPDATE_REFERENCE)();
var addMetadata = createAction(ADD_METADATA)();
var updateMetadata = createAction(UPDATE_METADATA)();
var removeMetadata = createAction(REMOVE_METADATA)();
var reorderMetadata = createAction(REORDER_METADATA)();
var entityActions = {
  importEntities,
  modifyEntityField,
  reorderEntityField,
  addReference,
  removeReference,
  updateReference,
  addMetadata,
  removeMetadata,
  updateMetadata,
  reorderMetadata
};

// src/vault/actions/mapping-actions.ts
var ADD_MAPPING = "@iiif/ADD_MAPPING";
var ADD_MAPPINGS = "@iiif/ADD_MAPPINGS";
var addMapping = createAction(ADD_MAPPING)();
var addMappings = createAction(ADD_MAPPINGS)();
var mappingActions = { addMapping, addMappings };

// src/vault/actions/meta-actions.ts
var SET_META_VALUE = "@iiif/SET_META_VALUE";
var SET_META_VALUE_DYNAMIC = "@iiif/SET_META_VALUE_DYNAMIC";
var UNSET_META_VALUE = "@iiif/UNSET_META_VALUE";
var setMetaValue = createAction(SET_META_VALUE)();
var setMetaValueDynamic = createAction(SET_META_VALUE_DYNAMIC)();
var unsetMetaValue = createAction(UNSET_META_VALUE)();
var metaActions = {
  setMetaValue,
  setMetaValueDynamic,
  unsetMetaValue
};

// src/vault/actions/request-actions.ts
var RESOURCE_ERROR = "RESOURCE_ERROR";
var RESOURCE_LOADING = "RESOURCE_LOADING";
var RESOURCE_READY = "RESOURCE_READY";
var REQUEST_RESOURCE = "@iiif/REQUEST_RESOURCE";
var REQUEST_ERROR = "@iiif/REQUEST_ERROR";
var REQUEST_MISMATCH = "@iiif/REQUEST_MISMATCH";
var REQUEST_COMPLETE = "@iiif/REQUEST_COMPLETE";
var REQUEST_OFFLINE_RESOURCE = "@iiif/REQUEST_OFFLINE_RESOURCE";
var requestResource = createAction(REQUEST_RESOURCE)();
var requestError = createAction(REQUEST_ERROR)();
var requestMismatch = createAction(REQUEST_MISMATCH)();
var requestComplete = createAction(REQUEST_COMPLETE)();
var requestOfflineResource = createAction(REQUEST_OFFLINE_RESOURCE)();
var requestActions = {
  requestResource,
  requestError,
  requestMismatch,
  requestComplete,
  requestOfflineResource
};

// src/vault/actions/batch-actions.ts
var BATCH_ACTIONS = "@iiif/BATCH";
var BATCH_IMPORT = "@iiif/BATCH_IMPORT";
var batchActions = createAction(BATCH_ACTIONS)();
var batchImport = createAction(BATCH_IMPORT)();
