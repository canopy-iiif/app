// src/nav-date.ts
function createDateNavigation(vault, manifestOrCollection, inputType) {
  const type = inputType || "century";
  const items = [];
  const centuries = [];
  const resource = vault.get(manifestOrCollection);
  if (!resource.items) {
    return items;
  }
  for (const item of resource.items) {
    if (item.navDate) {
      const d = new Date(item.navDate);
      const year = d.getFullYear();
      const month = d.getMonth();
      const day = d.getDate();
      const decade = Math.floor(year / 10) * 10;
      const century = Math.floor(year / 100) * 100;
      let centuryItem = centuries.find((i) => i.yearStart === century);
      if (!centuryItem) {
        centuryItem = {
          id: `${resource.id}/century/${century}`,
          label: { en: [`${century} - ${century + 99}`] },
          type: "century",
          yearStart: century,
          yearEnd: century + 99,
          count: 1,
          items: []
        };
        if (type === "century") {
          items.push(centuryItem);
        }
        centuries.push(centuryItem);
      } else {
        centuryItem.count++;
      }
      let decadeItem = centuryItem.items.find((i) => i.yearStart === decade);
      if (!decadeItem) {
        decadeItem = {
          id: `${resource.id}/decade/${decade}`,
          label: { en: [`${decade} - ${decade + 9}`] },
          type: "decade",
          yearStart: decade,
          yearEnd: decade + 9,
          count: 1,
          items: []
        };
        centuryItem.items.push(decadeItem);
        if (type === "decade") {
          items.push(decadeItem);
        }
      } else {
        decadeItem.count++;
      }
      let yearItem = decadeItem.items.find((i) => i.year === year);
      if (!yearItem) {
        yearItem = {
          id: `${resource.id}/year/${year}`,
          label: { en: [`${year}`] },
          type: "year",
          year,
          count: 1,
          items: []
        };
        decadeItem.items.push(yearItem);
        if (type === "year") {
          items.push(yearItem);
        }
      } else {
        yearItem.count++;
      }
      let monthItem = yearItem.items.find((i) => i.month === month);
      if (!monthItem) {
        monthItem = {
          id: `${resource.id}/month/${year}/${month + 1}`,
          // Month as string
          label: {
            en: [
              type === "month" ? `${d.toLocaleString("default", { month: "long" })} ${year}` : `${d.toLocaleString("default", { month: "long" })}`
            ]
          },
          type: "month",
          month,
          count: 1,
          items: []
        };
        yearItem.items.push(monthItem);
        if (type === "month") {
          items.push(monthItem);
        }
      } else {
        monthItem.count++;
      }
      let dayItem = monthItem.items.find((i) => i.day === day);
      if (!dayItem) {
        dayItem = {
          id: `${resource.id}/day/${year}/${month + 1}/${day}`,
          label: { en: [`${d.toDateString()}`] },
          type: "day",
          day,
          count: 1,
          items: []
        };
        monthItem.items.push(dayItem);
        if (type === "day") {
          items.push(dayItem);
        }
      } else {
        dayItem.count++;
      }
      dayItem.items.push({
        id: item.id,
        type: item.type,
        label: item.label || { en: [`${year}-${month + 1}-${day}`] },
        navDate: item.navDate
      });
    }
  }
  if (!inputType) {
    let autoItem = items;
    while (autoItem.length === 1) {
      autoItem = autoItem[0].items;
    }
    return autoItem;
  }
  return items;
}

export {
  createDateNavigation
};
