import{a as r}from"./chunk-NJNTZ6QT.js";import{a as i}from"./chunk-D22QKJZO.js";function v(a){return typeof a=="string"?!1:a&&!a.type&&"source"in a?(a.type="SpecificResource",!0):!!a&&a.type==="SpecificResource"}function o(...a){return e=>a.reduce((t,n)=>n(t),e)}var p=["Collection","Manifest","Canvas","AnnotationPage","AnnotationCollection","Annotation","ContentResource","Range","Service","Selector","Agent"];function y(a,e){if(typeof a>"u"||a===null)throw new Error("Null or undefined is not a valid entity.");if(Array.isArray(a))throw new Error("Array is not a valid entity");if(typeof a!="object"){if(e)return e;throw new Error(`${typeof a} is not a valid entity`)}if(typeof a.type=="string"){let t=p.indexOf(a.type);if(t!==-1)return p[t]}if(a.profile)return"Service";throw new Error("Resource type is not known")}var l=class a{constructor(e,t={}){i(this,"traversals");i(this,"options");i(this,"_traverseManifest",o(this.traverseManifestItems.bind(this),this.traverseNavPlace.bind(this),this.traverseLinking.bind(this),this.traverseDescriptive.bind(this),this.traverseLinkedCanvases.bind(this),this.traverseManifestStructures.bind(this),this.traverseInlineAnnotationPages.bind(this)));i(this,"_traverseCanvas",o(this.traverseCanvasItems.bind(this),this.traverseLinking.bind(this),this.traverseDescriptive.bind(this),this.traverseLinkedCanvases.bind(this),this.traverseInlineAnnotationPages.bind(this)));i(this,"_traverseAnnotationPage",o(this.traverseAnnotationPageItems.bind(this),this.traverseLinking.bind(this),this.traverseDescriptive.bind(this)));i(this,"_traverseRange",o(this.traverseRangeRanges.bind(this),this.traverseLinking.bind(this),this.traverseDescriptive.bind(this),this.traverseLinkedCanvases.bind(this)));this.traversals={collection:[],manifest:[],canvas:[],annotationCollection:[],annotationPage:[],annotation:[],contentResource:[],choice:[],range:[],service:[],agent:[],specificResource:[],geoJson:[],...e},this.options={allowUndefinedReturn:!1,...t}}static all(e){return new a({collection:[e],manifest:[e],canvas:[e],annotationCollection:[e],annotationPage:[e],annotation:[e],contentResource:[e],choice:[e],range:[e],service:[e],geoJson:[e],specificResource:[e],agent:[e]})}traverseDescriptive(e){return e.thumbnail&&(e.thumbnail=r(e.thumbnail).map(t=>this.traverseType(t,{parent:e},this.traversals.contentResource))),e.provider&&(e.provider=e.provider.map(t=>this.traverseAgent(t,e))),e}traverseLinking(e){return e.seeAlso&&(e.seeAlso=r(e.seeAlso).map(t=>this.traverseType(t,{parent:e},this.traversals.contentResource))),e.service&&(e.service=r(e.service).map(t=>this.traverseService(t))),e.services&&(e.services=r(e.services).map(t=>this.traverseService(t,e))),e.logo&&(e.logo=r(e.logo).map(t=>this.traverseType(t,{parent:e},this.traversals.contentResource))),e.homepage&&(e.homepage=r(e.homepage).map(t=>this.traverseType(t,{parent:e},this.traversals.contentResource))),e.partOf&&(e.partOf=e.partOf.map(t=>typeof t=="string"||!t.type?this.traverseType(t,{parent:e},this.traversals.contentResource):t.type==="Canvas"?this.traverseType(t,{parent:e},this.traversals.canvas):t.type==="AnnotationCollection"?this.traverseType(t,{parent:e},this.traversals.annotationCollection):t.type==="Collection"?this.traverseType(t,{parent:e},this.traversals.collection):this.traverseType(t,{parent:e},this.traversals.contentResource))),e.start&&(v(e.start)?e.start=this.traverseSpecificResource(e.start,"Canvas",e):e.start=this.traverseType(e.start,{parent:e},this.traversals.canvas)),e.rendering&&(e.rendering=e.rendering.map(t=>this.traverseType(t,{parent:e},this.traversals.contentResource))),e.supplementary&&(e.supplementary=e.supplementary.map(t=>this.traverseType(t,{parent:e},this.traversals.contentResource))),e}traverseCollectionItems(e){return e.items&&e.items.map(t=>t.type==="Collection"?this.traverseCollection(t):this.traverseManifest(t)),e}traverseCollection(e,t){return this.traverseType(this.traverseDescriptive(this.traverseNavPlace(this.traverseInlineAnnotationPages(this.traverseLinking(this.traverseLinkedCanvases(this.traverseCollectionItems(e)))))),{parent:t},this.traversals.collection)}traverseGeoJson(e,t){return this.traverseType(e,{parent:t},this.traversals.geoJson)}traverseNavPlace(e){return e.navPlace&&(e.navPlace=this.traverseGeoJson(e.navPlace,e)),e}traverseManifestItems(e){return e.items&&(e.items=e.items.map(t=>this.traverseCanvas(t))),e}traverseManifestStructures(e){return e.structures&&(e.structures=e.structures.map(t=>this.traverseRange(t))),e}traverseManifest(e,t){return this.traverseType(this._traverseManifest(e),{parent:t},this.traversals.manifest)}traverseCanvasItems(e){return e.items=(e.items||[]).map(t=>this.traverseAnnotationPage(t,e)),e}traverseInlineAnnotationPages(e){return typeof e=="string"||!e||e.annotations&&(e.annotations=e.annotations.map(t=>this.traverseAnnotationPage(t,e))),e}traverseCanvas(e,t){return this.traverseType(this._traverseCanvas(e),{parent:t},this.traversals.canvas)}traverseAnnotationPageItems(e){return e.items&&(e.items=e.items.map(t=>this.traverseAnnotation(t,e))),e}traverseAnnotationPage(e,t){return this.traverseType(this._traverseAnnotationPage(e),{parent:t},this.traversals.annotationPage)}traverseAnnotationBody(e){return Array.isArray(e.body)?e.body=e.body.map(t=>this.traverseContentResource(t,e)):e.body&&(e.body=this.traverseContentResource(e.body,e)),e}traverseLinkedCanvases(e){return e.placeholderCanvas&&(e.placeholderCanvas=this.traverseCanvas(e.placeholderCanvas)),e.accompanyingCanvas&&(e.accompanyingCanvas=this.traverseCanvas(e.accompanyingCanvas)),e}traverseAnnotation(e,t){return this.traverseType(this.traverseLinking(this.traverseAnnotationBody(this.traverseDescriptive(e))),{parent:t},this.traversals.annotation)}traverseContentResourceLinking(e){return typeof e=="string"||!e||e&&e.service&&(e.service=r(e.service||[]).map(t=>this.traverseService(t,e))),e}traverseContentResource(e,t){return e.type==="Choice"&&(e.items=e.items.map(n=>this.traverseContentResource(n,e))),v(e)?this.traverseSpecificResource(e,"ContentResource"):this.traverseType(this.traverseInlineAnnotationPages(this.traverseContentResourceLinking(e)),{parent:t},this.traversals.contentResource)}traverseSpecificResource(e,t,n){let s=e.source;return typeof e.source=="string"&&(s={id:e.source,type:t||"unknown"}),this.traverseType({...e,source:t==="Canvas"||s.type==="Canvas"?this.traverseType(s,{parent:n},this.traversals.canvas):t==="ContentResource"?this.traverseContentResource(s,{parent:n}):this.traverseUnknown(s,{parent:n,typeHint:t})},{parent:n},this.traversals.specificResource)}traverseRangeRanges(e){return e.items&&(e.items=e.items.map(t=>typeof t=="string"?this.traverseCanvas({id:t,type:"Canvas"},e):v(t)?this.traverseSpecificResource(t,"Canvas",e):t.type==="Manifest"?this.traverseManifest(t,e):this.traverseRange(t,e))),e}traverseRange(e,t){return this.traverseType(this._traverseRange(e),{parent:t},this.traversals.range)}traverseAgent(e,t){return this.traverseType(this.traverseDescriptive(this.traverseLinking(e)),{parent:t},this.traversals.agent)}traverseType(e,t,n){return n.reduce((s,c)=>{let h=c(s,t);return typeof h>"u"&&!this.options.allowUndefinedReturn?s:h},e)}traverseService(e,t){let n=Object.assign({},e);return n&&n.service&&(n.service=r(n.service).map(s=>this.traverseService(s))),this.traverseType(n,{parent:t},this.traversals.service)}traverseUnknown(e,{parent:t,typeHint:n}={}){let s=y(e,n);switch(s){case"Collection":return this.traverseCollection(e,t);case"Manifest":return this.traverseManifest(e,t);case"Canvas":return this.traverseCanvas(e,t);case"AnnotationPage":return this.traverseAnnotationPage(e,t);case"Annotation":return this.traverseAnnotation(e,t);case"ContentResource":return this.traverseContentResource(e,t);case"Range":return this.traverseRange(e,t);case"Service":return this.traverseService(e,t);case"Agent":return this.traverseAgent(e,t);default:throw new Error(`Unknown or unsupported resource type of ${s}`)}}};export{v as a,p as b,y as c,l as d};
